# .github/workflows/vending-request-handler-workflow.yml
name: Vending Request Handler Workflow

on:
  workflow_dispatch:
    inputs:
      request_json:
        required: true
        description: 'The vending JSON request to be processed.'
        type: string
        default: '{"vending_support_team":"GIDUSR01","request_id":"auto-generated","global_id":"GID01","user_name":"GIDUSR01","contact_email_address":"requestor.owner@domain.com","aad_groups":{"owner":"xxxxx-xxxxx-xxxxx-xxxxx","reader":"zzzzz-zzzzz-zzzzz-zzzzz"},"tags":{"Application":"GID01","BusinessStream":"GID01","CostCenter":"123456"},"default_resource_groups":2,"subscriptions":[]}'
permissions:
   pull-requests: write
   contents: write
   actions: write
   id-token: write
jobs:
  request_handler:
    name: Request Handler
    runs-on: ubuntu-latest
    #environment: ${{ inputs.gh_environment }}
    outputs:
      request_id: ${{ steps.validate_request.outputs.request_id }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Validate and Save Request
        id: validate_request
        run: |
            <#
            .SYNOPSIS
            This PowerShell script is used to validate the vending solution JSON request against a schema and save the request to a file.

            .DESCRIPTION
            Requirements
            1. Validate the JSON request against a schema.
            2. Save the JSON request to a file to /workloads/requests/{global_id}/request.json.
            3. Delete the existing JSON request if it exists.            
            #>

            $ErrorActionPreference = "Stop"
            # Set variables
            $jsonRequestInput = '${{ inputs.request_json }}'
            $sourceDirectory = "${{ github.workspace }}"
            $workloadsDirectory = "$sourceDirectory/workloads"
            $requestsDirectory = "$workloadsDirectory/requests"

            # Create requests directory if not found
            if (-Not (Test-Path -Path $requestsDirectory)) {
                # Create the folder if it does not exist
                New-Item -ItemType Directory -Path $requestsDirectory
                Write-Output "Folder created at $requestsDirectory"
            }

            # Validate request JSON against schema
            $requestSchema = Get-Content "$sourceDirectory/schemas/vending-request-schema.json" -Raw
            $jsonRequestInput | Test-Json -Schema $requestSchema
            $jsonRequest = $jsonRequestInput | ConvertFrom-Json
            $requestId = $jsonRequest.global_id

            echo "request_id=$requestId" >> $env:GITHUB_OUTPUT
            echo "request_id=$requestId" >> $env:GITHUB_ENV

            # Save request to file
            $requestDirectory = "$requestsDirectory/$requestId"
            $requestFile = "$requestDirectory/request.json"

            # Create request directory if not found
            if (-Not (Test-Path -Path $requestDirectory)) {
                # Create the folder if it does not exist
                New-Item -ItemType Directory -Path $requestDirectory
                Write-Output "Folder created at $requestDirectory"
            }
            
            # Should this delete the builds/subscriptions directories?
            # Delete existing JSON request
            if (Test-Path $requestFile) {
                Remove-Item $requestFile -Force
            }

            # Save new request JSON file
            New-Item $requestFile -ItemType File -Value $jsonRequestInput
        shell: pwsh
        working-directory: ${{ github.workspace }}
        continue-on-error: false
      - name: Create Pull Request
        uses: ./.github/actions/create-pull-request
        with:
          branch_name: 'features/subscription/${{ env.request_id }}'
          base_branch: 'main'
          commit_message: 'Add request for ${{ env.request_id }}'
          commit_user_name: 'githubactions'
          commit_user_email: 'githubactions@users.noreply.github.com'
          pull_request_title: 'Vending solution request ${{ env.request_id }}'
          pull_request_body: 'This PR is auto-generated by the GitHub Actions Vending Request Handler Workflow.\nReview the /workloads/requests/${{ env.request_id }}/request.json file for details.'
          working_directory: ${{ github.workspace }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
    #   - name: Create new Branch and Commit
    #     run: |
    #         git checkout -b features/subscription/${{ env.request_id }}            
    #         git config --global user.name "githubactions"
    #         git config --global user.email "githubactions@users.noreply.github.com"
    #         git add -A
    #         git commit -am "Add request for ${{ env.request_id }}"
    #     shell: bash
    #     working-directory: ${{ github.workspace }}
    #   - name: Push branch to GitHub
    #     run: |
    #         git push --force -u origin features/subscription/${{ env.request_id }}
    #     shell: bash
    #     working-directory: ${{ github.workspace }}
    #   - name: Create Pull Request
    #     uses: actions/github-script@v7
    #     with:
    #       script: |
    #         const { repo, owner } = context.repo;
    #         const result = await github.rest.pulls.create({
    #           title: 'Vending solution request ${{ env.request_id }}',
    #           owner,
    #           repo,
    #           head: 'features/subscription/${{ env.request_id }}',
    #           base: 'main',
    #           body: 'This PR is auto-generated by the GitHub Actions Vending Request Handler Workflow.\nReview the /workloads/requests/${{ env.request_id }}/request.json file for details.'
    #         });      