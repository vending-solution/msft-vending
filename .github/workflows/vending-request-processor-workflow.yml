# .github/workflows/vending-request-processor-workflow.yml
name: Vending Request Processor Workflow

on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - 'workloads/requests/**'
  workflow_dispatch:
    inputs:
      request_id:
        required: true
        default: 'wBurgers'
        description: 'The vending request ID to be processed.'    

permissions:
  contents: read
  id-token: write
  actions: read  
  security-events: write

jobs:
  set-request:
    name: Set Request ID
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    outputs:
      request_id: ${{ steps.parse-id.outputs.request_id }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set Request ID
        id: parse-id
        shell: pwsh
        run: |
          $requestPath = $env:REQUEST_PATH
          $requestId = $requestPath.split("/")[-1]
          echo "Request ID: $requestId"
          echo "request_id=$requestId" >> $env:GITHUB_OUTPUT
          echo "REQUEST_ID=$requestId" >> $env:GITHUB_ENV
        env:
          REQUEST_PATH: ${{ github.head_ref || inputs.request_id }}  
  terraform-sub:
    name: Terraform Subscription Orchestration ${{ needs.set-request.outputs.request_id }}
    if: needs.set-request.outputs.request_id != ''
    #uses: vending-solution/reusable-workflows/.github/workflows/tf_orchestration.yml@main
    uses: ./.github/workflows/tf_orchestration.yml
    needs: set-request
    secrets: inherit
    with:
      tf_version: 'latest'
      working_directory: 'terraform/vnet-deployment'
      environment: 'dev'
      gh_environment: 'sbx'
      backend_azure_rm_resource_group_name: 'rg-lra-tf-dev-eus1'
      backend_azure_rm_storage_account_name: 'stalratfdeveus1'
      backend_azure_rm_container_name: 'poctfstate'
      backend_azure_rm_key: 'lratfdev.tfstate'
      plan_file_name: 'terraform.tfplan'
      var_file: '../../environments/landing-zones.tfvars'
      artifact_affix: "sub"
  # TODO : Output the new sub id from the module
  terraform-build:
    name: Terraform Subscription Orchestration ${{ needs.set-request.outputs.request_id }}
    if: needs.set-request.outputs.request_id != ''
    #uses: vending-solution/reusable-workflows/.github/workflows/tf_orchestration.yml@main
    uses: ./.github/workflows/tf_orchestration.yml
    needs: [set-request, terraform-sub]
    secrets: inherit
    with:
      tf_version: 'latest'
      working_directory: 'terraform/vnet-deployment'
      environment: 'dev'
      gh_environment: 'sbx'
      backend_azure_rm_resource_group_name: 'rg-lra-tf-dev-eus1'
      backend_azure_rm_storage_account_name: 'stalratfdeveus1'
      backend_azure_rm_container_name: 'poctfstate'
      backend_azure_rm_key: 'lratfdev.tfstate'
      plan_file_name: 'terraform.tfplan'
      var_file: '../../environments/landing-zones.tfvars'
      artifact_affix: "build"
      
